loop_id;module;function_name;function_id;source_info;level;time_p;time_s;time_s_min;time_s_avg;time_s_max;cov_deviation;nb_threads;
103;miniXyce.x;mX_matrix_utils::sparse_matrix_vector_product(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&);67;;InBetween;0.31;0.4;;;;;;
130;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0.08;0.1;;;;;;
131;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0.07;0.09;;;;;;
107;miniXyce.x;mX_matrix_utils::sparse_matrix_vector_product(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&);67;;Innermost;0.07;0.09;;;;;;
106;miniXyce.x;mX_matrix_utils::sparse_matrix_vector_product(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&);67;;Innermost;0.07;0.08;;;;;;
104;miniXyce.x;mX_matrix_utils::sparse_matrix_vector_product(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&);67;;Outermost;0.03;0.04;;;;;;
127;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0.03;0.04;;;;;;
109;miniXyce.x;mX_matrix_utils::sparse_matrix_vector_product(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&);67;;Innermost;0.02;0.03;;;;;;
132;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0.02;0.02;;;;;;
138;miniXyce.x;std::_Rb_tree<int, std::pair<int const, double>, std::_Select1st<std::pair<int const, double> >, std::less<int>, std::allocator<std::pair<int const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, double> >*);71;;Single;0.02;0.02;;;;;;
116;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;InBetween;0.01;0.01;;;;;;
112;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0.01;0.01;;;;;;
27;miniXyce.x;mX_linear_DAE_utils::evaluate_b(double, mX_linear_DAE_utils::mX_linear_DAE*);49;;Outermost;0.01;0.01;;;;;;
128;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0;0;;;;;;
114;miniXyce.x;mX_matrix_utils::gmres(mX_matrix_utils::distributed_sparse_matrix*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&, double&, int, std::vector<double, std::allocator<double> >&, int&, int&);68;;Innermost;0;0;;;;;;
142;miniXyce.x;void std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_realloc_insert<std::vector<double, std::allocator<double> > const&>(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >, std::vector<double, std::allocator<double> > const&);73;;Single;0;0;;;;;;
